{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGif.js","hooks/useFetchGif.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","value","type","onChange","target","GifGridItem","title","url","className","src","alt","getGif","category","a","fetch","respuesta","json","data","gif","map","img","id","images","downsized_medium","useFetchGif","loading","state","setstate","useEffect","then","imgs","GifGrid","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6LAkCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAiBrC,OACG,sBACKC,SAZe,SAAAC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAG,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAMnB,SAGI,uBACKO,MAAOR,EACPS,KAAK,OACLC,SArBW,SAACP,GACpBF,EAAcE,EAAEQ,OAAOH,a,QCIhBI,EAVK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAExB,OACI,sBAAKC,UAAU,yDAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAM,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACPN,EADO,0FACkFK,EADlF,sBAGWE,MAAMP,GAHjB,cAGPQ,EAHO,gBAIQA,EAAUC,OAJlB,uBAINC,EAJM,EAINA,KAEDC,EAAMD,EAAKE,KAAK,SAAAC,GAAG,MACrB,CACIC,GAAID,EAAIC,GACRf,MAAMc,EAAId,MACVC,IAAMa,EAAIE,OAAOC,iBAAiBhB,QAV7B,kBAcNW,GAdM,4CAAF,sDCsBJM,EApBK,SAACZ,GAAc,IAAD,EACJpB,mBAAS,CAC/ByB,KAAK,GACLQ,SAAQ,IAHkB,mBACvBC,EADuB,KAChBC,EADgB,KAiB9B,OAXAC,qBAAW,WAEPjB,EAAOC,GACFiB,MAAM,SAAAC,GACHH,EAAS,CACLV,KAAMa,EACNL,SAAQ,SAGtB,CAACb,IAEIc,GCEIK,EAjBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,EAEHY,EAAYZ,GAA7BK,EAFoB,EAEpBA,KAAMQ,EAFc,EAEdA,QACd,OACI,qCACI,6BAAKb,IACHa,GAAW,wCACb,qBAAKjB,UAAU,WAAf,SACUS,EAAKE,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCe/BW,EA1BM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,KAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAIvB,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ0C,EAAWd,KAAK,SAAAP,GAAQ,OACrB,cAAC,EAAD,CAEKA,SAAUA,GADLA,YCXjCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.854afafe.chunk.js","sourcesContent":["import React , {useState}from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleOnChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleOnSubmit = e=>{\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length > 1){\r\n            setCategorias( cat=> [inputValue,...cat ] )\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n       <form\r\n            onSubmit={handleOnSubmit}\r\n       >\r\n           <input\r\n                value={inputValue}\r\n                type='text'\r\n                onChange={ handleOnChange }\r\n           />\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes={\r\n    setCategorias: PropTypes.func.isRequired\r\n} ","import React from 'react'\r\n\r\nconst GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce animate__fadeIn' >\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","\r\nexport const getGif =async(category)=>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=mOfj8RRUunH3r5LIpejzoraehFH3lOFn&q=${category}&limit=10`\r\n\r\n        const respuesta = await fetch(url)\r\n        const {data} = await respuesta.json()\r\n\r\n        const gif = data.map( img => (\r\n            {\r\n                id: img.id,\r\n                title:img.title,\r\n                url : img.images.downsized_medium.url\r\n            }\r\n        ))\r\n\r\n        return gif\r\n    }\r\n","import  {useEffect, useState} from 'react'\r\nimport {getGif} from '../helpers/GetGif'\r\n\r\nconst useFetchGif = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect( ()=>{\r\n\r\n        getGif(category)\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n            })\r\n        })\r\n    },[category] )\r\n\r\n    return state\r\n}\r\n\r\nexport default useFetchGif\r\n","import React from 'react'\r\nimport GifGridItem from './GifGridItem'\r\nimport useFetchGif from '../hooks/useFetchGif'\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data ,loading} = useFetchGif(category)\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p>Loading</p> }\r\n            <div className='cardGrid' >\r\n                    { data.map( img=> (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    )) \r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n\r\n","import React , {useState}from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState([''])\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categorias.map( category=> (\r\n                       <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                       />\r\n                    ))\r\n                } \r\n            </ol>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}